<html>
<head>
</head>
<body>
<style>
canvas{background-color:lightgrey; position:absolute;left:0;top:40px;right:0;bottom:0;margin:auto;}
.btn{text-align: center;height:60px}
</style>
<div class="btn">
<input id="startbnt" type="button" value="START GAME" style="background-color:orange;width:200px;font-size:15"/>
</div>
<canvas width="600" height="600" id="canvas"></canvas>

<script>
var startbnt=document.getElementById("startbnt")
var canvas=document.getElementById('canvas');
var gc=canvas.getContext("2d");
var arr=[
       [[1,1,1,1]],
	   [[1,1],[1,1]],
	   [[1,1,0],[0,1,1]],
	   [[0,1,1],[1,1,0]],
	   [[0,1,0],[1,1,1]],
	   [[1,0,0],[1,1,1]],
       [[0,0,1],[1,1,1]]
  ]
var ispeed=0;
var ispeedLR=11;
var data=map(24,24);
var matrix=mold();
var timer=null;
var onoff=false;
var arrnewline=[]
    for(var i=0;i<24
    ;i++)
     {
      arrnewline.push(0)
     };

function map(row,coln)
{
 var data=[]
 var i=j=0
 for(i=0;i<row;i++)
 {
  data.push([]);
  for(j=0;j<coln;j++)
   {
    data[i].push(0);
   }
  }
 return data
}

render(data,gc);
function render(data,gc)
{
  var rlen=data.length;
  var clen=data[0].length;
  var i=j=0;
  var w=600/24-10
  var h=w

 for(i=0;i<rlen;i++)
 {
  for(j=0;j<clen;j++)
   {
    if(data[i][j]==0)
    {gc.fillStyle='white';
    }else
    {
     gc.fillStyle='orange'
    }
    gc.fillRect(j*(w+10)+5,i*(h+10)+5,w,h)
   //gc.getRect(x,y,xwidth,yheight)
   }
 }
}

function mold()
{
 var num=Math.floor(Math.random()*7);
 return arr[num];
}

//create Tetris in canvas with color
 color(matrix)
 function color(arr)
 {
   for(var i=0;i<arr.length;i++)
   {
    for(var j=0;j<arr[i].length;j++)
      {
        if(!data[i+ispeed][j+ispeedLR])
         {
          data[i+ispeed][j+ispeedLR]=arr[i][j]
         }
       }
   }
  render(data,gc);
 }

function clearPre(arr)
{
    for(var i=0;i<arr.length;i++)
    {
      for(var j=0;j<arr[i].length;j++)
       {
         if(arr[i][j])
         {
          data[i+ispeed][j+ispeedLR]=0
         }
        }
   }
}


startbnt.onclick=function()
{
auto(200);
}

function auto(time)
 {timer=setInterval(function()
    {
     fall()
    },time)
  }

function fall()
{
 if(touchTest(matrix))
 {
  clearLine();
  ispeed=0;
  ispeedLR=11
  matrix=mold()
 }
  clearPre(matrix);
  ispeed++;
  color(matrix);
}

function touchTest(matrix1)
{
 var len=matrix1.length
 if(ispeed+len>=data.length)
   {
    return true;
   }

 var arr = matrix1[len-1];
 var n;
 for(var i=0;i<arr.length;i++)
   {
    n=len-1;
    while(!matrix1[n][i])
      {
       n--;
      }
    if(data[ispeed+1+n][i+ispeedLR])
      {
        return true;
      }

   }
  return false;
}

function touchTestLR(w,matrix1)
 {
  var maxLR=data[0].length-matrix1[0].length;
  if(ispeedLR+w<0||ispeedLR+w>maxLR)
   {
    return true;
   }

   if(w<0)
    {
      for(var i=0;i<matrix1.length;i++)
      {
       var index=0;
       while(!matrix1[i][index])
        {
         index++;
         }
       if(!data[i+ispeed]||data[i+ispeed][ispeedLR+index-1])
        {
          return true;
        }
       }
     }else
      {
       for(var i=0;i<matrix1.length;i++)
	      {
	        var index=matrix1[0].length;
	        while(!matrix1[i][index])
	          {
	           index--;
	           }
	         if(!data[i+ispeed]||data[i+ispeed][ispeedLR+index+1])
	           {
	            return true;
	           }
           }
      }
 return false;
}
play();
function play()
{
 document.onkeydown=function(event)
   {
     switch(event.keyCode)
      {
       case 37://<- move toward left
              clearPre(matrix);
              if(!touchTestLR(-1,matrix))
               {
                ispeedLR--;
               }
               color(matrix);
       break;
       case 39://-> move toward right
              clearPre(matrix);
              if(!touchTestLR(1,matrix))
			    {
			    ispeedLR++;
                }
              color(matrix);
       break;
       case 38://change mold;
                clearPre(matrix);
                rotate();
                color(matrix);
       break;
       case 40://speedy dropping down
               if(onoff)return;
                onoff=true;
                clearInterval(timer);
                auto(60);
       break;
      }
   };
      document.onkeyup=function(event)
      {
        if(event.keyCode == 40)
           {
              onoff=false;
              clearInterval(timer);
              auto(200);
           }
       }
}

 function rotate()
 {
   var arr=[];

   for(var i=0;i<matrix[0].length;i++)
    {
     arr.push([]);
    }

   for(var i=0;i<matrix.length;i++)
   {
    for(var j=0;j<matrix[0].length;j++)
      {
        arr[j][matrix.length-1-i]=matrix[i][j]
      }
   }

   if(touchTestLR(1,arr)||touchTestLR(-1,arr)||touchTest(arr))
   {
    return;
   }
   matrix=arr;
 }

function clearLine()
{
 var n;
 for(var i=0;i<data.length;i++)
   {
     n=true;
     for(var j=0;j<data[i].length;j++)
       {
         if(!data[i][j])
           {
            n=false;
           }

       }
         if(n)
           {
           data.splice(i,1);
           data.unshift([].concat(arrnewline));
           }

   }
}

gameover()
function gameover()
{
 if(touchTest(matrix)||data[0][j])
   {
     alert(gameover)
   }
}

/*
var Tetris=function()
{
 this mold={
  s: [[1,1,1,1]],
  b: [[1,1],[1,1]],
  z:[[1,1,0],[0,1,1]],
  z1:[[0,1,1],[1,1,0]],
  t:[[0,1,0],[1,1,1]],
  l:[[1,0,0],[1,1,1]],
  l1:[[0,0,1],[1,1,1]]
 };
}*/
</script>
</body>
</html>
